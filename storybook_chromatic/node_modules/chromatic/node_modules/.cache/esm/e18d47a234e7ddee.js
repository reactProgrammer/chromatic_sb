let getDuration;_34e‍.x([["initial",()=>initial],["pending",()=>pending],["success",()=>success],["skipped",()=>skipped],["failed",()=>failed]]);_34e‍.w("../../lib/tasks",[["getDuration",["getDuration"],function(v){getDuration=v}]]);

const fullCommand = ({ command, clientArgs, scriptArgs }) =>
  [command, ...clientArgs, ...scriptArgs].join(' ');

       const initial = {
  status: 'initial',
  title: 'Build Storybook',
};

       const pending = (ctx) => ({
  status: 'pending',
  title: `Building your Storybook`,
  output: `Running command: ${fullCommand(ctx.spawnParams)}`,
});

       const success = (ctx) => ({
  status: 'success',
  title: `Storybook built in ${getDuration(ctx)}`,
  output: `View build log at ${ctx.buildLogFile}`,
});

       const skipped = (ctx) => ({
  status: 'skipped',
  title: 'Build Storybook [skipped]',
  output: `Using prebuilt Storybook at ${ctx.options.storybookBuildDir}`,
});

       const failed = (ctx) => ({
  status: 'error',
  title: `Building your Storybook`,
  output: `Command failed: ${fullCommand(ctx.spawnParams)}`,
});
